//
//  main.cpp
//  AsioServer
//
//  Created by shiyi on 2016/12/10.
//  Copyright © 2016年 shiyi. All rights reserved.
//

#include <iostream>
#include <boost/asio.hpp>
#include <boost/bind.hpp>
#include <boost/thread.hpp>

using namespace boost;

using socket_ptr = boost::shared_ptr<asio::ip::tcp::socket>;

void client_session(socket_ptr sock)
{
    
    auto ep = sock->local_endpoint();
    std::cout<<ep.address().to_string()<<"连接"<<std::endl;

    char data[512];
    boost::system::error_code ec;
    size_t len;

    while(true)
    {
        len = sock->read_some(asio::buffer(data), ec);
        if(ec)
        {
            std::cout << boost::system::system_error(ec).what() << std::endl;
            break;
        }
        
        len = sock->write_some(asio::buffer(data), ec);
        if(ec)
        {
            std::cout << boost::system::system_error(ec).what() << std::endl;
            break;
        }
    }
    
    std::cout<<ep.address().to_string()<<"关闭"<<std::endl;

}

int main(int argc, const char * argv[]) {
 
    asio::io_service service;
    asio::ip::tcp::endpoint ep(asio::ip::address::from_string("127.0.0.1"), 6666);
    asio::ip::tcp::acceptor apt(service, ep);
    
    while(true)
    {
        socket_ptr sock(new asio::ip::tcp::socket(service));
        apt.accept(*sock);
        boost::thread(boost::bind(client_session, sock));
    }
    
}
